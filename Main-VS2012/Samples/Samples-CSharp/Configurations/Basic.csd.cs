//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Samples.Configurations
{
    
    
    /// <summary>
    /// The SimpleSection Configuration Section.
    /// </summary>
    public partial class SimpleSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SimpleSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SimpleSectionSectionName = "simpleSection";
        
        /// <summary>
        /// Gets the SimpleSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::Samples.Configurations.SimpleSection Instance
        {
            get
            {
                return ((global::Samples.Configurations.SimpleSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Samples.Configurations.SimpleSection.SimpleSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Samples.Configurations.SimpleSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Samples.Configurations.SimpleSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Simple Property
        /// <summary>
        /// The XML name of the <see cref="Simple"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SimplePropertyName = "simple";
        
        /// <summary>
        /// Gets or sets the Simple.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Simple.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Samples.Configurations.SimpleSection.SimplePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::Samples.Configurations.SimpleElement Simple
        {
            get
            {
                return ((global::Samples.Configurations.SimpleElement)(base[global::Samples.Configurations.SimpleSection.SimplePropertyName]));
            }
            set
            {
                base[global::Samples.Configurations.SimpleSection.SimplePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Samples.Configurations
{
    
    
    /// <summary>
    /// The SimpleElement Configuration Element.
    /// </summary>
    public partial class SimpleElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Foo Property
        /// <summary>
        /// The XML name of the <see cref="Foo"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string FooPropertyName = "foo";
        
        /// <summary>
        /// Gets or sets the Foo.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Foo.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Samples.Configurations.SimpleElement.FooPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Foo
        {
            get
            {
                return ((string)(base[global::Samples.Configurations.SimpleElement.FooPropertyName]));
            }
            set
            {
                base[global::Samples.Configurations.SimpleElement.FooPropertyName] = value;
            }
        }
        #endregion
        
        #region Bar Property
        /// <summary>
        /// The XML name of the <see cref="Bar"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string BarPropertyName = "bar";
        
        /// <summary>
        /// Gets or sets the Bar.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Bar.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Samples.Configurations.SimpleElement.BarPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Bar
        {
            get
            {
                return ((string)(base[global::Samples.Configurations.SimpleElement.BarPropertyName]));
            }
            set
            {
                base[global::Samples.Configurations.SimpleElement.BarPropertyName] = value;
            }
        }
        #endregion
    }
}
