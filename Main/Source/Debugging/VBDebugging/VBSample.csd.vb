'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace VBSample
    
    '''<summary>
    '''The VBSection Configuration Section.
    '''</summary>
    Partial Public Class VBSection
        Inherits Global.VBDebugging.VBSample.VBSubSection
        
        #Region "Singleton Instance"
        '''<summary>
        '''The XML name of the VBSection Configuration Section.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const VBSectionSectionName As String = "vBSection"
        
        '''<summary>
        '''Gets the VBSection instance.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Shadows Shared ReadOnly Property Instance() As Global.VBDebugging.VBSample.VBSection
            Get
                Return CType(Global.System.Configuration.ConfigurationManager.GetSection(Global.VBDebugging.VBSample.VBSection.VBSectionSectionName),Global.VBDebugging.VBSample.VBSection)
            End Get
        End Property
        #End Region
        
        #Region "Xmlns Property"
        '''<summary>
        '''The XML name of the <see cref="Xmlns"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const XmlnsPropertyName As String = "xmlns"
        
        '''<summary>
        '''Gets the XML namespace of this Configuration Section.
        '''</summary>
        '''<remarks>
        '''This property makes sure that if the configuration file contains the XML namespace,
        '''the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        '''</remarks>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.VBSection.XmlnsPropertyName, IsRequired:=false, IsKey:=false, IsDefaultCollection:=false)>  _
        Public ReadOnly Property Xmlns() As String
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.VBSection.XmlnsPropertyName),String)
            End Get
        End Property
        #End Region
        
        #Region "IsReadOnly override"
        '''<summary>
        '''Gets a value indicating whether the element is read-only.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides Function IsReadOnly() As Boolean
            Return false
        End Function
        #End Region
        
        #Region "DotNet Property"
        '''<summary>
        '''The XML name of the <see cref="DotNet"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const DotNetPropertyName As String = "dotNet"
        
        '''<summary>
        '''Gets or sets the DotNet.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.ComponentModel.DescriptionAttribute("The DotNet."),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.VBSection.DotNetPropertyName, IsRequired:=false, IsKey:=false, IsDefaultCollection:=false)>  _
        Public Property DotNet() As String
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.VBSection.DotNetPropertyName),String)
            End Get
            Set
                MyBase.Item(Global.VBDebugging.VBSample.VBSection.DotNetPropertyName) = value
            End Set
        End Property
        #End Region
        
        #Region "VBElement Property"
        '''<summary>
        '''The XML name of the <see cref="VBElement"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const VBElementPropertyName As String = "vBElement"
        
        '''<summary>
        '''Gets or sets the VBElement.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.ComponentModel.DescriptionAttribute("The VBElement."),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.VBSection.VBElementPropertyName, IsRequired:=false, IsKey:=false, IsDefaultCollection:=false)>  _
        Public Property VBElement() As Global.VBDebugging.VBSample.VBElement
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.VBSection.VBElementPropertyName),Global.VBDebugging.VBSample.VBElement)
            End Get
            Set
                MyBase.Item(Global.VBDebugging.VBSample.VBSection.VBElementPropertyName) = value
            End Set
        End Property
        #End Region
        
        #Region "VBCollection Property"
        '''<summary>
        '''The XML name of the <see cref="VBCollection"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const VBCollectionPropertyName As String = "vBCollection"
        
        '''<summary>
        '''Gets or sets the VBCollection.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.ComponentModel.DescriptionAttribute("The VBCollection."),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.VBSection.VBCollectionPropertyName, IsRequired:=false, IsKey:=false, IsDefaultCollection:=false)>  _
        Public Property VBCollection() As Global.VBDebugging.VBSample.VBCollection
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.VBSection.VBCollectionPropertyName),Global.VBDebugging.VBSample.VBCollection)
            End Get
            Set
                MyBase.Item(Global.VBDebugging.VBSample.VBSection.VBCollectionPropertyName) = value
            End Set
        End Property
        #End Region
    End Class
End Namespace

Namespace VBSample
    
    '''<summary>
    '''The VBElement Configuration Element.
    '''</summary>
    Partial Public NotInheritable Class VBElement
        Inherits Global.VBDebugging.VBSample.Schnoll
        
        #Region "IsReadOnly override"
        '''<summary>
        '''Gets a value indicating whether the element is read-only.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides Function IsReadOnly() As Boolean
            Return false
        End Function
        #End Region
        
        #Region "Angular Property"
        '''<summary>
        '''The XML name of the <see cref="Angular"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const AngularPropertyName As String = "angular"
        
        '''<summary>
        '''Gets or sets the Angular.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.ComponentModel.DescriptionAttribute("The Angular."),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.VBElement.AngularPropertyName, IsRequired:=true, IsKey:=true, IsDefaultCollection:=false)>  _
        Public Property Angular() As Double
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.VBElement.AngularPropertyName),Double)
            End Get
            Set
                MyBase.Item(Global.VBDebugging.VBSample.VBElement.AngularPropertyName) = value
            End Set
        End Property
        #End Region
    End Class
End Namespace

Namespace VBSample
    
    '''<summary>
    '''A collection of VBElement instances.
    '''</summary>
    <Global.System.Configuration.ConfigurationCollectionAttribute(GetType(Global.VBDebugging.VBSample.VBElement), CollectionType:=Global.System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName:=Global.VBDebugging.VBSample.VBCollection.VBElementPropertyName)>  _
    Partial Public Class VBCollection
        Inherits Global.System.Configuration.ConfigurationElementCollection
        
        #Region "Constants"
        '''<summary>
        '''The XML name of the individual <see cref="Global.VBDebugging.VBSample.VBElement"/> instances in this collection.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const VBElementPropertyName As String = "vBElement"
        #End Region
        
        #Region "Overrides"
        '''<summary>
        '''Gets the type of the <see cref="Global.System.Configuration.ConfigurationElementCollection"/>.
        '''</summary>
        '''<returns>The <see cref="Global.System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides ReadOnly Property CollectionType() As Global.System.Configuration.ConfigurationElementCollectionType
            Get
                Return Global.System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate
            End Get
        End Property
        
        '''<summary>
        '''Gets the name used to identify this collection of elements
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Protected Overrides ReadOnly Property ElementName() As String
            Get
                Return Global.VBDebugging.VBSample.VBCollection.VBElementPropertyName
            End Get
        End Property
        
        '''<summary>
        '''Indicates whether the specified <see cref="Global.System.Configuration.ConfigurationElement"/> exists in the <see cref="Global.System.Configuration.ConfigurationElementCollection"/>.
        '''</summary>
        '''<param name="elementName">The name of the element to verify.</param>
        '''<returns>
        '''<see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        '''</returns>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Protected Overrides Function IsElementName(ByVal elementName As String) As Boolean
            Return (elementName = Global.VBDebugging.VBSample.VBCollection.VBElementPropertyName)
        End Function
        
        '''<summary>
        '''Gets the element key for the specified configuration element.
        '''</summary>
        '''<param name="element">The <see cref="Global.System.Configuration.ConfigurationElement"/> to return the key for.</param>
        '''<returns>
        '''An <see cref="Object"/> that acts as the key for the specified <see cref="Global.System.Configuration.ConfigurationElement"/>.
        '''</returns>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Protected Overrides Function GetElementKey(ByVal element As Global.System.Configuration.ConfigurationElement) As Object
            Return CType(element,Global.VBDebugging.VBSample.VBElement).Angular
        End Function
        
        '''<summary>
        '''Creates a new <see cref="Global.VBDebugging.VBSample.VBElement"/>.
        '''</summary>
        '''<returns>
        '''A new <see cref="Global.VBDebugging.VBSample.VBElement"/>.
        '''</returns>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Protected Overrides Function CreateNewElement() As Global.System.Configuration.ConfigurationElement
            Return New Global.VBDebugging.VBSample.VBElement
        End Function
        #End Region
        
        #Region "Indexer"
        '''<summary>
        '''Gets the <see cref="Global.VBDebugging.VBSample.VBElement"/> at the specified index.
        '''</summary>
        '''<param name="index">The index of the <see cref="Global.VBDebugging.VBSample.VBElement"/> to retrieve.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overloads Default ReadOnly Property Item(ByVal index As Integer) As Global.VBDebugging.VBSample.VBElement
            Get
                Return CType(MyBase.BaseGet(index),Global.VBDebugging.VBSample.VBElement)
            End Get
        End Property
        
        '''<summary>
        '''Gets the <see cref="Global.VBDebugging.VBSample.VBElement"/> with the specified key.
        '''</summary>
        '''<param name="angular">The key of the <see cref="Global.VBDebugging.VBSample.VBElement"/> to retrieve.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overloads Default ReadOnly Property Item(ByVal angular As Object) As Global.VBDebugging.VBSample.VBElement
            Get
                Return CType(MyBase.BaseGet(angular),Global.VBDebugging.VBSample.VBElement)
            End Get
        End Property
        #End Region
        
        #Region "Add"
        '''<summary>
        '''Adds the specified <see cref="Global.VBDebugging.VBSample.VBElement"/> to the <see cref="Global.System.Configuration.ConfigurationElementCollection"/>.
        '''</summary>
        '''<param name="vBElement">The <see cref="Global.VBDebugging.VBSample.VBElement"/> to add.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Sub Add(ByVal vBElement As Global.VBDebugging.VBSample.VBElement)
            MyBase.BaseAdd(vBElement)
        End Sub
        #End Region
        
        #Region "Remove"
        '''<summary>
        '''Removes the specified <see cref="Global.VBDebugging.VBSample.VBElement"/> from the <see cref="Global.System.Configuration.ConfigurationElementCollection"/>.
        '''</summary>
        '''<param name="vBElement">The <see cref="Global.VBDebugging.VBSample.VBElement"/> to remove.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Sub Remove(ByVal vBElement As Global.VBDebugging.VBSample.VBElement)
            MyBase.BaseRemove(Me.GetElementKey(vBElement))
        End Sub
        #End Region
        
        #Region "GetItem"
        '''<summary>
        '''Gets the <see cref="Global.VBDebugging.VBSample.VBElement"/> at the specified index.
        '''</summary>
        '''<param name="index">The index of the <see cref="Global.VBDebugging.VBSample.VBElement"/> to retrieve.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Function GetItemAt(ByVal index As Integer) As Global.VBDebugging.VBSample.VBElement
            Return CType(MyBase.BaseGet(index),Global.VBDebugging.VBSample.VBElement)
        End Function
        
        '''<summary>
        '''Gets the <see cref="Global.VBDebugging.VBSample.VBElement"/> with the specified key.
        '''</summary>
        '''<param name="angular">The key of the <see cref="Global.VBDebugging.VBSample.VBElement"/> to retrieve.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Function GetItemByKey(ByVal angular As Double) As Global.VBDebugging.VBSample.VBElement
            Return CType(MyBase.BaseGet(CType(angular,Object)),Global.VBDebugging.VBSample.VBElement)
        End Function
        #End Region
        
        #Region "IsReadOnly override"
        '''<summary>
        '''Gets a value indicating whether the element is read-only.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides Function IsReadOnly() As Boolean
            Return false
        End Function
        #End Region
    End Class
End Namespace

Namespace VBSample
    
    '''<summary>
    '''The Schnoll Configuration Element.
    '''</summary>
    Partial Public MustInherit Class Schnoll
        Inherits Global.System.Configuration.ConfigurationElement
        
        #Region "IsReadOnly override"
        '''<summary>
        '''Gets a value indicating whether the element is read-only.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides Function IsReadOnly() As Boolean
            Return false
        End Function
        #End Region
        
        #Region "Scholl Property"
        '''<summary>
        '''The XML name of the <see cref="Scholl"/> property.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const SchollPropertyName As String = "scholl"
        
        '''<summary>
        '''Gets or sets the Scholl.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0"),  _
         Global.System.ComponentModel.DescriptionAttribute("The Scholl."),  _
         Global.System.Configuration.ConfigurationPropertyAttribute(Global.VBDebugging.VBSample.Schnoll.SchollPropertyName, IsRequired:=false, IsKey:=false, IsDefaultCollection:=false)>  _
        Public Property Scholl() As Date
            Get
                Return CType(MyBase.Item(Global.VBDebugging.VBSample.Schnoll.SchollPropertyName),Date)
            End Get
            Set
                MyBase.Item(Global.VBDebugging.VBSample.Schnoll.SchollPropertyName) = value
            End Set
        End Property
        #End Region
    End Class
End Namespace

Namespace VBSample
    
    '''<summary>
    '''The VBSubSection Configuration Section.
    '''</summary>
    Partial Public Class VBSubSection
        Inherits Global.System.Configuration.ConfigurationSection
        
        #Region "Singleton Instance"
        '''<summary>
        '''The XML name of the VBSubSection Configuration Section.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Friend Const VBSubSectionSectionName As String = "vBSubSection"
        
        '''<summary>
        '''Gets the VBSubSection instance.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Shared ReadOnly Property Instance() As Global.VBDebugging.VBSample.VBSubSection
            Get
                Return CType(Global.System.Configuration.ConfigurationManager.GetSection(Global.VBDebugging.VBSample.VBSubSection.VBSubSectionSectionName),Global.VBDebugging.VBSample.VBSubSection)
            End Get
        End Property
        #End Region
        
        #Region "IsReadOnly override"
        '''<summary>
        '''Gets a value indicating whether the element is read-only.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.5.1.0")>  _
        Public Overrides Function IsReadOnly() As Boolean
            Return false
        End Function
        #End Region
    End Class
End Namespace
