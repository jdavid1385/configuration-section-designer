//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// The MailMessage Configuration Element.
    /// </summary>
    public partial class MailMessage : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Subject Property
        /// <summary>
        /// The XML name of the <see cref="Subject"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SubjectPropertyName = "subject";
        
        /// <summary>
        /// Gets or sets the Subject.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Subject.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailMessage.SubjectPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Subject
        {
            get
            {
                return ((string)(base[global::Debugging.IssueTests.MailMessage.SubjectPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailMessage.SubjectPropertyName] = value;
            }
        }
        #endregion
        
        #region AddRemoveClearMapRecipients Property
        /// <summary>
        /// The XML name of the <see cref="AddRemoveClearMapRecipients"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AddRemoveClearMapRecipientsPropertyName = "addRemoveClearMapRecipients";
        
        /// <summary>
        /// Gets or sets the AddRemoveClearMapRecipients.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AddRemoveClearMapRecipients.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailMessage.AddRemoveClearMapRecipientsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Debugging.IssueTests.AddRemoveClearMapRecipients AddRemoveClearMapRecipients
        {
            get
            {
                return ((global::Debugging.IssueTests.AddRemoveClearMapRecipients)(base[global::Debugging.IssueTests.MailMessage.AddRemoveClearMapRecipientsPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailMessage.AddRemoveClearMapRecipientsPropertyName] = value;
            }
        }
        #endregion
        
        #region AddRemoveClearMapAlternateRecipients Property
        /// <summary>
        /// The XML name of the <see cref="AddRemoveClearMapAlternateRecipients"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AddRemoveClearMapAlternateRecipientsPropertyName = "addRemoveClearMapAlternateRecipients";
        
        /// <summary>
        /// Gets or sets the AddRemoveClearMapAlternateRecipients.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AddRemoveClearMapAlternateRecipients.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailMessage.AddRemoveClearMapAlternateRecipientsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Debugging.IssueTests.AddRemoveClearMapAlternateRecipients AddRemoveClearMapAlternateRecipients
        {
            get
            {
                return ((global::Debugging.IssueTests.AddRemoveClearMapAlternateRecipients)(base[global::Debugging.IssueTests.MailMessage.AddRemoveClearMapAlternateRecipientsPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailMessage.AddRemoveClearMapAlternateRecipientsPropertyName] = value;
            }
        }
        #endregion
        
        #region BasicMapRecipients Property
        /// <summary>
        /// The XML name of the <see cref="BasicMapRecipients"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string BasicMapRecipientsPropertyName = "basicMapRecipients";
        
        /// <summary>
        /// Gets or sets the BasicMapRecipients.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The BasicMapRecipients.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailMessage.BasicMapRecipientsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Debugging.IssueTests.BasicMapRecipients BasicMapRecipients
        {
            get
            {
                return ((global::Debugging.IssueTests.BasicMapRecipients)(base[global::Debugging.IssueTests.MailMessage.BasicMapRecipientsPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailMessage.BasicMapRecipientsPropertyName] = value;
            }
        }
        #endregion
        
        #region BasicMapAlternateRecipients Property
        /// <summary>
        /// The XML name of the <see cref="BasicMapAlternateRecipients"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string BasicMapAlternateRecipientsPropertyName = "basicMapAlternateRecipients";
        
        /// <summary>
        /// Gets or sets the BasicMapAlternateRecipients.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The BasicMapAlternateRecipients.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailMessage.BasicMapAlternateRecipientsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Debugging.IssueTests.BasicMapAlternateRecipients BasicMapAlternateRecipients
        {
            get
            {
                return ((global::Debugging.IssueTests.BasicMapAlternateRecipients)(base[global::Debugging.IssueTests.MailMessage.BasicMapAlternateRecipientsPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailMessage.BasicMapAlternateRecipientsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// The Reciepient Configuration Element.
    /// </summary>
    public partial class Reciepient : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets or sets the Address.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Address.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.Reciepient.AddressPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::Debugging.IssueTests.Reciepient.AddressPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.Reciepient.AddressPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// A collection of Reciepient instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Debugging.IssueTests.Reciepient), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class AddRemoveClearMapRecipients : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Debugging.IssueTests.Reciepient"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReciepientPropertyName = "reciepient";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Debugging.IssueTests.AddRemoveClearMapRecipients.ReciepientPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Debugging.IssueTests.AddRemoveClearMapRecipients.ReciepientPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Debugging.IssueTests.Reciepient)(element)).Address;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Debugging.IssueTests.Reciepient();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[int index]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[object address]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(address)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Debugging.IssueTests.Reciepient"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseAdd(reciepient);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Debugging.IssueTests.Reciepient"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseRemove(this.GetElementKey(reciepient));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemAt(int index)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemByKey(string address)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(((object)(address)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// The MailSection Configuration Section.
    /// </summary>
    public partial class MailSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the MailSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string MailSectionSectionName = "mailSection";
        
        /// <summary>
        /// Gets the MailSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Debugging.IssueTests.MailSection Instance
        {
            get
            {
                return ((global::Debugging.IssueTests.MailSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Debugging.IssueTests.MailSection.MailSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Debugging.IssueTests.MailSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Mail Property
        /// <summary>
        /// The XML name of the <see cref="Mail"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string MailPropertyName = "mail";
        
        /// <summary>
        /// Gets or sets the Mail.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Mail.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Debugging.IssueTests.MailSection.MailPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Debugging.IssueTests.MailMessage Mail
        {
            get
            {
                return ((global::Debugging.IssueTests.MailMessage)(base[global::Debugging.IssueTests.MailSection.MailPropertyName]));
            }
            set
            {
                base[global::Debugging.IssueTests.MailSection.MailPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// A collection of Reciepient instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Debugging.IssueTests.Reciepient), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class AddRemoveClearMapAlternateRecipients : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Debugging.IssueTests.Reciepient"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReciepientPropertyName = "reciepient";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Debugging.IssueTests.AddRemoveClearMapAlternateRecipients.ReciepientPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Debugging.IssueTests.AddRemoveClearMapAlternateRecipients.ReciepientPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Debugging.IssueTests.Reciepient)(element)).Address;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Debugging.IssueTests.Reciepient();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[int index]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[object address]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(address)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Debugging.IssueTests.Reciepient"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseAdd(reciepient);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Debugging.IssueTests.Reciepient"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseRemove(this.GetElementKey(reciepient));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemAt(int index)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemByKey(string address)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(((object)(address)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// A collection of Reciepient instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Debugging.IssueTests.Reciepient), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Debugging.IssueTests.BasicMapAlternateRecipients.ReciepientPropertyName)]
    public partial class BasicMapAlternateRecipients : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Debugging.IssueTests.Reciepient"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReciepientPropertyName = "reciepient";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Debugging.IssueTests.BasicMapAlternateRecipients.ReciepientPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Debugging.IssueTests.BasicMapAlternateRecipients.ReciepientPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Debugging.IssueTests.Reciepient)(element)).Address;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Debugging.IssueTests.Reciepient();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[int index]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[object address]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(address)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Debugging.IssueTests.Reciepient"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseAdd(reciepient);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Debugging.IssueTests.Reciepient"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseRemove(this.GetElementKey(reciepient));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemAt(int index)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemByKey(string address)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(((object)(address)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Debugging.IssueTests
{
    
    
    /// <summary>
    /// A collection of Reciepient instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Debugging.IssueTests.Reciepient), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::Debugging.IssueTests.BasicMapRecipients.ReciepientPropertyName)]
    public partial class BasicMapRecipients : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Debugging.IssueTests.Reciepient"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReciepientPropertyName = "reciepient";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Debugging.IssueTests.BasicMapRecipients.ReciepientPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Debugging.IssueTests.BasicMapRecipients.ReciepientPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Debugging.IssueTests.Reciepient)(element)).Address;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Debugging.IssueTests.Reciepient"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Debugging.IssueTests.Reciepient();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[int index]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient this[object address]
        {
            get
            {
                return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(address)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Debugging.IssueTests.Reciepient"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseAdd(reciepient);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Debugging.IssueTests.Reciepient"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="reciepient">The <see cref="global::Debugging.IssueTests.Reciepient"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Debugging.IssueTests.Reciepient reciepient)
        {
            base.BaseRemove(this.GetElementKey(reciepient));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemAt(int index)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Debugging.IssueTests.Reciepient"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::Debugging.IssueTests.Reciepient"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Debugging.IssueTests.Reciepient GetItemByKey(string address)
        {
            return ((global::Debugging.IssueTests.Reciepient)(base.BaseGet(((object)(address)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
